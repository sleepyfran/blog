<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>swiftui on sleepyfran's blog</title><link>https://sleepyfran.github.io/blog/tags/swiftui/</link><description>Recent content in swiftui on sleepyfran's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 21 Jun 2022 20:30:00 +0000</lastBuildDate><atom:link href="https://sleepyfran.github.io/blog/tags/swiftui/index.xml" rel="self" type="application/rss+xml"/><item><title>Formatters in SwiftUI</title><link>https://sleepyfran.github.io/blog/posts/swiftui-formatting/</link><pubDate>Tue, 21 Jun 2022 20:30:00 +0000</pubDate><guid>https://sleepyfran.github.io/blog/posts/swiftui-formatting/</guid><description>One of the most common issues I had with SwiftUI were always related to handling different data types inside of the Text or TextField controls, specially when handling numbers like Decimal where you&amp;rsquo;d need to manually specify a NumberFormatter with the correct settings and yada yada yada.
Luckily since iOS 15, iPadOS 15 and macOS 12 it&amp;rsquo;s possible to simply pass a format to the Text and TextField controls and it takes care of displaying it correctly by itself.</description><content>&lt;p>One of the most common issues I had with SwiftUI were always related to handling
different data types inside of the &lt;code>Text&lt;/code> or &lt;code>TextField&lt;/code> controls, specially
when handling numbers like &lt;code>Decimal&lt;/code> where you&amp;rsquo;d need to manually specify a
&lt;code>NumberFormatter&lt;/code> with the correct settings and yada yada yada.&lt;/p>
&lt;p>Luckily since iOS 15, iPadOS 15 and macOS 12 it&amp;rsquo;s possible to simply pass a format to the &lt;code>Text&lt;/code> and &lt;code>TextField&lt;/code> controls and it takes care of displaying it
correctly by itself. This means that we can, for example, create a text field
that formats itself to display the amount in US Dollars with this little amount
of code:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-swift" data-lang="swift">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">import&lt;/span> &lt;span style="color:#a6e22e">SwiftUI&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">struct&lt;/span> &lt;span style="color:#a6e22e">ContentView&lt;/span>: View {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @State &lt;span style="color:#66d9ef">var&lt;/span> accountBalance: Decimal = &lt;span style="color:#ae81ff">1500.24&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> body: some View {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> VStack(alignment: .center) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> TextField(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;Enter your balance&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> value: &lt;span style="color:#960050;background-color:#1e0010">$&lt;/span>accountBalance,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> format: .currency(code: &lt;span style="color:#e6db74">&amp;#34;USD&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .textFieldStyle(.roundedBorder)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Which displays this:
&lt;img src="https://sleepyfran.github.io/blog/blog/img/swiftui-formatting/swiftui-formatting_2022-06-21-22-26-30.png" alt="iOS Simulator displaying a TextField control formatting the content in US Dollars">&lt;/p>
&lt;p>And of course it supports all the currency codes that you could originally put
on a &lt;code>NumberFormatter&lt;/code>, as easy as changing &lt;code>USD&lt;/code> for &lt;code>GBP&lt;/code> and we got ourselves
a nice looking Text Field that displays its content in Pounds:&lt;/p>
&lt;p>&lt;img src="https://sleepyfran.github.io/blog/blog/img/swiftui-formatting/swiftui-formatting_2022-06-21-22-26-56.png" alt="iOS Simulator displaying a TextField control formatting the content in Pounds">&lt;/p>
&lt;p>This also works by using the &lt;code>format&lt;/code> parameter in a &lt;code>Text&lt;/code> control:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-swift" data-lang="swift">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">import&lt;/span> &lt;span style="color:#a6e22e">SwiftUI&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">struct&lt;/span> &lt;span style="color:#a6e22e">ContentView&lt;/span>: View {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @State &lt;span style="color:#66d9ef">var&lt;/span> accountBalance: Decimal = &lt;span style="color:#ae81ff">1500.24&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> body: some View {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> VStack(alignment: .center) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Text(accountBalance,format: .currency(code: &lt;span style="color:#e6db74">&amp;#34;USD&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://sleepyfran.github.io/blog/blog/img/swiftui-formatting/swiftui-formatting_2022-06-21-22-25-53.png" alt="iOS Simulator displaying a Text control formatting the content in US Dollars">&lt;/p>
&lt;p>And these shortcuts are just for the base case, if you require any more configuration
on top of that you can use the &lt;code>FormatStyle&lt;/code> directly and configure it to your
liking. For example, this next snippet shows the amount formatted for US Dollars
always displaying the sign and scaling the amount 4 times:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-swift" data-lang="swift">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">import&lt;/span> &lt;span style="color:#a6e22e">SwiftUI&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">struct&lt;/span> &lt;span style="color:#a6e22e">ContentView&lt;/span>: View {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @State &lt;span style="color:#66d9ef">var&lt;/span> accountBalance: Decimal = &lt;span style="color:#ae81ff">1500.24&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> body: some View {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> VStack(alignment: .center) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Text(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> accountBalance,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> format: Decimal.FormatStyle.Currency(code: &lt;span style="color:#e6db74">&amp;#34;USD&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .sign(strategy: .always())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .scale(&lt;span style="color:#ae81ff">4&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://sleepyfran.github.io/blog/blog/img/swiftui-formatting/swiftui-formatting_2022-06-21-22-25-12.png" alt="iOS Simulator showing a Text control formatting as explained above">&lt;/p>
&lt;p>There&amp;rsquo;s a lot of other formatters available, so simply add &lt;code>format&lt;/code> to your control
and try all of them out!&lt;/p></content></item></channel></rss>